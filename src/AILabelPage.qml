import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.15
import FluentUI 1.0
import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import OpenCVTest 1.0
import QtQuick.Dialogs
// 1. ‰ΩøÁî® FluScrollerPage ‰Ωú‰∏∫È°µÈù¢ÁöÑÊ†πÁªÑ‰ª∂

FluScrollablePage {
    id: root
    property string recognitionResult: "" // <--- Ê∑ªÂä†Ëøô‰∏ÄË°å
    property string selectedImagePath: ""
    property string imagePreviewSource: ""
    OpenCVTest {
        id: cvTest
    }
    // Êñá‰ª∂ÈÄâÊã©ÂØπËØùÊ°Ü
    FileDialog {
        id: fileDialog
        title: "ÈÄâÊã©ÂõæÁâáÊñá‰ª∂"
        nameFilters: ["ÂõæÁâáÊñá‰ª∂ (*.png *.jpg *.jpeg *.bmp *.gif)"]
        onAccepted: {
            root.selectedImagePath = selectedFile.toString()
            root.imagePreviewSource = selectedFile.toString()
            showSuccess("ÂõæÁâáÈÄâÊã©ÊàêÂäü: " + selectedFile.toString().split('/').pop())
        }
    }

    // Êñ∞Â¢ûËøûÊé•
    Connections {
        target: cvTest
        function onEnhancedClassificationFinished(result) {
            root.recognitionResult = result
            btnStartEnhancedRecognition.loading = false
        }
    }
    RowLayout {

        width: parent.width
        spacing: 30


        Column {
            Layout.preferredWidth: parent.width * 0.6
            spacing: 20

            // È°µÈù¢Ê†áÈ¢ò
            Row {
                spacing: 15
                Image {
                        width: 60
                        height: 60
                        source: "qrc:/Icons/IxAi.png"
                        Layout.alignment: Qt.AlignVCenter
                    }
                // FluText {
                //     text: qsTr("üè∑Ô∏è")
                //     font.pointSize: 32
                //     anchors.verticalCenter: parent.verticalCenter
                //     color: FluTheme.accentColor
                // }

                Column {
                    spacing: 5

                    FluText {
                        text: qsTr("AI Ê†áÁ≠æËØÜÂà´")
                        font: FluTextStyle.Title
                    }

                    FluText {
                        text: qsTr("Êô∫ËÉΩËØÜÂà´ÂõæÁâáÂÜÖÂÆπÔºåÁîüÊàêÊ†áÁ≠æ")
                        color: FluTheme.fontSecondaryColor
                    }
                }
            }

            Rectangle {
                width: parent.width
                height: 1
                color: FluTheme.dividerColor
            }

            // AIÂ§ÑÁêÜÂå∫Âüü
            Rectangle {
                width: parent.width
                height: 350  // Â¢ûÂä†È´òÂ∫¶‰ª•ÂÆπÁ∫≥È¢ÑËßà
                color: FluTheme.itemHoverColor
                radius: 12
                border.width: 2
                border.color: FluTheme.dividerColor

                Column {
                    anchors.fill: parent
                    anchors.margins: 15
                    spacing: 15

                    // ÂõæÁâáÈ¢ÑËßàÂå∫Âüü
                    Rectangle {
                        width: parent.width
                        height: 200
                        color: FluTheme.backgroundColor
                        radius: 8
                        border.width: 1
                        border.color: FluTheme.dividerColor

                        Image {
                            id: imagePreview
                            anchors.centerIn: parent
                            width: parent.width - 20
                            height: parent.height - 20
                            fillMode: Image.PreserveAspectFit
                            source: root.imagePreviewSource
                            visible: root.imagePreviewSource !== ""

                            Rectangle {
                                anchors.fill: parent
                                color: "transparent"
                                border.width: 2
                                border.color: FluTheme.accentColor
                                radius: 4
                                visible: parent.visible
                            }
                        }

                        Column {
                            anchors.centerIn: parent
                            spacing: 10
                            visible: root.imagePreviewSource === ""

                            FluText {
                                text: qsTr("üì∑")
                                font.pointSize: 36
                                anchors.horizontalCenter: parent.horizontalCenter
                                color: FluTheme.fontTertiaryColor
                            }

                            FluText {
                                text: qsTr("ÁÇπÂáªÈÄâÊã©ÂõæÁâáËøõË°åAIËØÜÂà´")
                                anchors.horizontalCenter: parent.horizontalCenter
                                color: FluTheme.fontTertiaryColor
                            }
                        }
                    }

                    // Êìç‰ΩúÊåâÈíÆ
                    Row {
                        spacing: 10
                        anchors.horizontalCenter: parent.horizontalCenter

                        FluFilledButton {
                            text: qsTr("ÈÄâÊã©ÂõæÁâá")
                            onClicked: fileDialog.open()
                        }

                        FluLoadingButton {
                            id: btnStartEnhancedRecognition
                            text: qsTr("ÂºÄÂßãAIËØÜÂà´")
                            enabled: root.selectedImagePath !== ""

                            onClicked: {
                                if (root.selectedImagePath === "") {
                                    showWarning("ËØ∑ÂÖàÈÄâÊã©ÂõæÁâá")
                                    return
                                }

                                loading = true
                                root.recognitionResult = "Ê≠£Âú®ËøõË°åAIËØÜÂà´ÔºåËØ∑Á®çÂÄô..."

                                // Ê†πÊçÆÈÄâÊã©ÁöÑÊ®°ÂºèË∞ÉÁî®‰∏çÂêåÁöÑËØÜÂà´ÊñπÊ≥ï
                                let mode = btnAnimeClassification.checked ? "anime" : "original"
                                cvTest.classifyImageEnhanced(root.selectedImagePath, mode)
                            }
                        }

                        FluButton {
                            text: qsTr("Ê∏ÖÁ©∫ÁªìÊûú")
                            onClicked: {
                                root.recognitionResult = ""
                                showInfo("ÁªìÊûúÂ∑≤Ê∏ÖÁ©∫")
                            }
                        }
                    }
                }
            }
            FluGroupBox {
                title: qsTr("ËØÜÂà´Ê®°Âºè")
                width: parent.width

                // ÂÜÖÈÉ®‰ΩøÁî®ColumnLayoutÊù•ÂÆπÁ∫≥GridLayoutÔºåÂèØ‰ª•Êõ¥Â•ΩÂú∞ÊéßÂà∂ËæπË∑ù
                ColumnLayout {
                    anchors.fill: parent

                    GridLayout {
                        width: parent.width
                        columns: 2
                        columnSpacing: 15
                        rowSpacing: 8

                        FluToggleButton {
                            id: btnOriginalClassification
                            text: qsTr("ü§ñ ÈÄöÁî®ËØÜÂà´")
                            checked: true // ÈªòËÆ§ÈÄâ‰∏≠
                            Layout.fillWidth: true
                            onClicked: {
                                if (checked) {
                                    btnAnimeClassification.checked = false
                                } else {
                                    checked = true
                                }
                            }
                        }

                        FluToggleButton {
                            id: btnAnimeClassification
                            text: qsTr("üé® ‰∫åÊ¨°ÂÖÉËØÜÂà´")
                            Layout.fillWidth: true
                            onClicked: {
                                if (checked) {
                                    btnOriginalClassification.checked = false
                                } else {
                                    checked = true
                                }
                            }
                        }
                    }
                }
            }


        }

        // Âè≥‰æßÁªìÊûúÂå∫Âüü
        Column {
            Layout.fillWidth: true
            Layout.fillHeight: true
            spacing: 20

            FluText {
                text: qsTr("ËØÜÂà´ÁªìÊûú")
                font: FluTextStyle.Subtitle
            }
            FluMultilineTextBox {
                width: parent.width
                Layout.fillHeight: true // ËÆ©ÂÆÉÂ°´Êª°Ââ©‰ΩôÁöÑÈ´òÂ∫¶
                readOnly: true
                wrapMode: TextEdit.Wrap
                text: root.recognitionResult // <--- Ê†∏ÂøÉÁªëÂÆöÔºÅ
                placeholderText: "ÁÇπÂáªÂ∑¶‰æß‚ÄúAIËØÜÂà´ÊºîÁ§∫‚ÄùÊåâÈíÆÂºÄÂßã..."
            }




        }
    }
}


